plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = "${project.mod_version}-${project.minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Cloth Config
	maven { url "https://maven.shedaniel.me/" }

	// Mod Menu
	maven { url "https://maven.terraformersmc.com/releases/" }
}

fabricApi {
	configureDataGeneration() {
		client = true
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Cloth Config
	modApi("me.shedaniel.cloth:cloth-config-fabric:19.0.147") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Mod Menu
	modApi "com.terraformersmc:modmenu:15.0.0-beta.3"
}

processResources {
	inputs.property "version", project.version
	inputs.property "archives_base_name", project.base.archivesName
	inputs.property "mod_name", project.properties.mod_name
	inputs.property "loader_version", project.properties.loader_version
	inputs.property "minecraft_version", project.properties.minecraft_version

	filesMatching("fabric.mod.json") {
		expand([
				"version": inputs.properties.version,
				"archives_base_name": inputs.properties.archives_base_name,
				"mod_name": inputs.properties.mod_name,
				"loader_version": inputs.properties.loader_version,
				"minecraft_version": inputs.properties.minecraft_version,
		])
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {
        def testingLocally = false

        if (testingLocally) {
            maven {
                url = layout.buildDirectory.dir("local-repo")
            }
        } else {
            maven {
                name = "GitHubPackages"
                url = "https://maven.pkg.github.com/brainage04/HudRendererLib"
                credentials {
                    username = System.getenv("GITHUB_USERNAME")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
	}
}